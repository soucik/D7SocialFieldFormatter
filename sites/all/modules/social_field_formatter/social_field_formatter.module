<?php
/**
 * HELP HOOK - Displays help and module information.
 */
function social_field_formatter_help($path, $arg) {
	if ($path == 'admin/help#social_field_formatter') {
		return '<p>' . t('Module rearrange view of values in Social field inside Company node. It adds icons to links pointing to social sites.'). '</p>';
	}
}

/**
* Implements hook_field_formatter_info().
*/
function social_field_formatter_field_formatter_info() {
	return array(
	'social_field_formatter_formatter' => array( 
		'label' => t('Social field'),
		'field types' => array('text'),
		'settings' => array(
			'type' => 'icon',
			'size' => 'default'
			),
		),
	);
}

/**
* Implements hook_field_formatter_settings_form().
*/
function social_field_formatter_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
	$display = $instance['display'][$view_mode];
	$settings = $display['settings'];
	$element = array();

	$element['type'] = array(
		'#type' => 'select',
		'#title' => t('Type'),
		'#description' => t('Select what type of link will be shown.'),
		'#default_value' => $settings['type'],
		'#options' => array(
			'icon' => 'Icon',
			'text' => 'Text',
			'both' => 'Both',
		),
	);

	$element['size'] = array(
		'#type' => 'select',
		'#title' => t('Size'),
		'#description' => t('Select what size of social icon will be used.'),
		'#default_value' => $settings['size'],
		'#options' => array(
			'default' => 'Default',
			'large' => 'Large',
		),
	);
	return $element;
}

/**
* hook_field_formatter_settings_summary
*/
function social_field_formatter_field_formatter_settings_summary($field, $instance, $view_mode) {
	$display = $instance['display'][$view_mode];
	$settings = $display['settings'];
	$summary = t('Use a @type link option for link type with the icon size of "@size"', array(
		'@type' => $settings['type'],
		'@size' => $settings['size']
	));
	return $summary;
}

/**
* Implements hook_field_formatter_view().
*/
function social_field_formatter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
	$element = array();
	foreach ($items as $delta => $item) {
		$font_awesome_social_class = '';
		$social_domain_name = _parse_link_domain($item['safe_value']);
		
		switch($social_domain_name){
			case 'facebook':
				$font_awesome_social_class = "fa fa-facebook";
				break;
			case 'linkedin':
				$font_awesome_social_class = "fa fa-linkedin";
				break;
			case 'google':
				$font_awesome_social_class = "fa fa-google-plus";
				break;
			default:
				$font_awesome_social_class = "fa fa-globe";
				break;
		}
		$element[$delta] = array('#markup' =>'<i class="'.$font_awesome_social_class.'" aria-hidden="true"></i> '.$item['safe_value']);
	}
	return $element;
}

function _parse_link_domain($link){
	$particular_link = preg_replace('#^https?://#', '', $link); //remove http://, https://
	$particular_link = preg_replace('#^www.#', '', $particular_link); //remove www.
	$iPosition = strpos($particular_link, '.com'); //remove characters from beggining .com
	if ($iPosition !== false)
		return substr($particular_link, 0, $iPosition);
	else
		return $particular_link;
}
